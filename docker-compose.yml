version: "3.9"

services:
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    container_name: docker-magento_php-fpm
    networks:
      - internal
    volumes:
      - ./magento:/magento
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini

  app-server:
    build:
      context: .
      dockerfile: ./docker/app-server/Dockerfile
    container_name: docker-magento_app-server
    depends_on:
      - php-fpm
    networks:
      - external
      - internal
    ports:
      - 80:80
    volumes:
      - ./magento:/magento
      - ./docker/app-server/default.conf:/etc/nginx/conf.d/default.conf

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: docker-magento_mysql
    environment:
      MYSQL_DATABASE: "magento"
      MYSQL_PASSWORD: "magento"
      MYSQL_ROOT_PASSWORD: "magento"
      MYSQL_USER: "magento"
    networks:
      - internal
    platform: linux/amd64
    volumes:
      - mysql:/var/lib/mysql

  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch/Dockerfile
    container_name: docker-magento_elasticsearch
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    networks:
      - internal

  kibana:
    build:
      context: .
      dockerfile: ./docker/kibana/Dockerfile
    container_name: docker-magento_kibana
    networks:
      - internal
    platform: linux/amd64

  rabbitmq:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/Dockerfile
    container_name: docker-magento_rabbitmq
    networks:
      - internal

  redis:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    container_name: docker-magento_redis
    networks:
      - internal

  redis-admin:
    container_name: docker-magento_redis-admin
    environment:
      REDIS_1_HOST: "redis"
    image: erikdubbelboer/phpredisadmin:v1.13.2
    networks:
      - internal

networks:
  internal:
  external:

volumes:
  mysql:
